name: build portable rift engine bundles

permissions:
  contents: read

on:
  pull_request:
  push:
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10
  workflow_dispatch:

jobs:
  bundle:
    name: "bundle engines"
    defaults:
      run:
        working-directory: rift-engine
        shell: bash
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "pip" # caching pip dependencies
      - run: python3 -m venv venv
      - name: "Install"
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
             ./venv/Scripts/pip.exe install -e .
          else
             ./venv/bin/pip install -e .
          fi
      - name: "Test"
        continue-on-error: true
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
             ./venv/Scripts/pytest.exe
          else
             ./venv/bin/pytest.exe
          fi
      - name: "Bundle"
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
             ./venv/Scripts/pyinstaller.exe rift.spec
          else
             ./venv/bin/pyinstaller rift.spec
          fi
      - uses: actions/upload-artifact@v3
        with:
          name: rift-${{ runner.os }}
          path: ./rift-engine/dist/rift
          retention-days: 5

  release:
    name: "release bundles"
    needs: bundle
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    permissions:
      contents: write
    steps:
      # - name: Verify Versions
      #   run: node -e "if ('refs/tags/v' + require('./package.json').version !== '${{ github.ref }}') { console.log('::error' + 'Version Mismatch. refs/tags/v' + require('./package.json').version, '${{ github.ref }}'); throw Error('Version Mismatch')} "
      # - name: Generate Name
      # run: python3 -c "console.log('PACKAGE_NAME=' + require('./package.json').name + '-v' + require('./package.json').version)" >> $GITHUB_ENV
      - name: Download Linux Asset
        uses: actions/download-artifact@v3
        with:
          name: rift-Linux
      - name: Download macOS Asset
        uses: actions/download-artifact@v3
        with:
          name: rift-macOS
      - name: Download Windows Asset
        uses: actions/download-artifact@v3
        with:
          name: rift-Windows
      - run: |
          pwd
          ls -la .
          zip rift-Windows
      - uses: ncipollo/release-action@v1
        with:
          artifacts: "rift-Windows,rift-macOS,rift-Linux"
